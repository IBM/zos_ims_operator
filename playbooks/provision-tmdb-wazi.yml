---
###############################################################################
# Â© Copyright IBM Corporation 2023
###############################################################################
- name: IMS TMDB Provisioning
  hosts: all
  gather_facts: false
  # * Include different variable files depending on environment/inventory used
  vars_files:
    - vars_wazi/ims-dbdc.yml
    - vars_wazi/ims-zos.yml
  environment: '{{ system_environment }}'

  collections:
    - ibm.ibm_zos_core
    - ibm.ibm_zos_ims
    - operator_sdk.util

  tasks:
    
    # check if licence has been accepted and fail if not.
    - name: check for license agreement and fail if not accepted
      ansible.builtin.fail:
        msg: Product license was not accepted
      when: not accept

    - include_role:
        name: set_up_run_environment

    # This block is for handling 'Create' event
    - block:  
        # - name: send all templates to host
        #   include_role:
        #     name: send_all_templates

        - name: Provisioning starting.... this is a new instance
          include_role:
            name: update_instance_status
          vars:
            status_key: 'run_result'
            status_val: 'Provisioning in progress...'
            instance_kind: TMDB
          when: tmdb_cr_instance.resources[0].status.run_result is not defined

        - name: Saving templates location.... this is a new instance
          include_role:
            name: update_instance_status
          vars:
            status_key: 'templates_path'
            status_val: '{{tmdb_tmp_dir}}'
            instance_kind: TMDB

      when: not reconcile_run

    # This block is for handling faildDup reconcile event
    - block:  
        - name: Delete the temporary provision files directory {{ tmdb_tmp_dir.path }}
          file:
            path: "{{ tmdb_tmp_dir.path }}"
            state: absent

        # - name: send all templates to host
        #   include_role:
        #     name: send_all_templates

        - name: Provisioning starting.... this is reconciling a failedDup instance
          include_role:
            name: update_instance_status
          vars:
            status_key: 'run_result'
            status_val: 'Provisioning in progress...'
            instance_kind: TMDB
          when: tmdb_cr_instance.resources[0].status.run_result is not defined

        - name: Saving templates location....
          include_role:
            name: update_instance_status
          vars:
            status_key: 'templates_path'
            status_val: '{{tmdb_tmp_dir}}'
            instance_kind: TMDB

      when: 
       - reconcile_run
       - tmdb_cr_instance.resources[0].status.run_result == 'failedDup'

    - name: Validate user inputs
      include_role: 
        name: check_inputs
      vars:
        fail_task: true

    - block:
      - name: Check if IMS already up
        include_role: 
          name: check_duplicate_ims

      - name: Check if IMSPlex already up
        include_role: 
          name: check_duplicate_imsplex

      - name: Check if ports are available
        include_role:
          name: check_port
        vars:
          in_reconcile_mode: '{{reconcile_run}}'
        when: not reconcile_run or ( reconcile_run and tmdb_cr_instance.resources[0].status.run_result == 'failedDup')

      - name: send all templates to host
        include_role:
          name: send_all_templates
        when: not reconcile_run or ( reconcile_run and tmdb_cr_instance.resources[0].status.run_result == 'failedDup')

      - include_role:
          name: provision_ims

      - include_role:
          name: monitor_ims

      always:
        - block:
          - debug:
              var: ansible_failed_task
          when: ansible_failed_task is defined
        - block:
          - debug:
              var: ansible_failed_result
          when: ansible_failed_result is defined
        - block:
          - debug:  
              msg: 'temp dir to delete: {{tmdb_tmp_dir.path}}'
      vars:
        uss_file_path: '{{ tmdb_tmp_dir.path }}'
  handlers:
    - include: handlers/handlers.yml