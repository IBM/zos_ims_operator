---
#
# Copyright 2023 IBM Inc. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
#
# tasks file for monitor_ims
- name: Monitor IMS
  collections:
    - ibm.ibm_zos_core
    - ibm.ibm_zos_ims

  block:

    # Query IMS-managed ACB status
    - name: Query IMS-managed ACB status
      ims_command:
        command: QUERY MEMBER TYPE(IMS) SHOW(ATTRIB)
        plex:  '{{ DFS_IMSPlex }}'
      register: macb_status
      #ignore_errors: true

    - name: IMS attributes are {{macb_status.ims_output[0].type_2_response[0].LclAttr}}
      debug:
        msg: '{{ macb_status }}'

    # Query OM status
    - name: Query OM status
      ims_command:
        command: QUERY IMSPLEX NAME(*) TYPE(OM) SHOW(STATUS)
        plex:  '{{ DFS_IMSPlex }}'
      register: om_status
      #ignore_errors: true

    - name: OM status is {{om_status.ims_output[0].type_2_response[0].Status}}
      debug:
        msg: '{{ om_status }}'

    # Start OM if it's down
    - block:

      - include_role:
          name: ims_operations_manager
        vars:
          om: config

      - include_role:
          name: ims_operations_manager
        vars:
          om: start

      when: om_status.failed

    # Query SCI status
    - name: Query SCI status
      ims_command:
        command: QUERY IMSPLEX NAME(*) TYPE(SCI) SHOW(STATUS)
        plex:  '{{ DFS_IMSPlex }}'
      register: sci_status
      #ignore_errors: true

    - name: SCI status is {{sci_status.ims_output[0].type_2_response[0].Status}}
      debug:
        msg: '{{ sci_status }}'

    # Start SCI if it's down
    - block:

      - include_role:
          name: ims_structured_call_interface
        vars:
          sci: config

      - include_role:
          name: ims_structured_call_interface
        vars:
          sci: start

      when: sci_status.failed

    # Query RM status
    - name: Query RM status
      ims_command:
        command: QUERY IMSPLEX NAME(*) TYPE(RM) SHOW(STATUS)
        plex:  '{{ DFS_IMSPlex }}'
      register: rm_status
      #ignore_errors: true

    - name: RM status is {{rm_status.ims_output[0].type_2_response[0].Status}}
      debug:
        msg: '{{ rm_status }}'
        
    # Start RM if it's down
    - block:

      - include_role:
          name: ims_resource_manager
        vars:
          rm: config

      - include_role:
          name: ims_resource_manager
        vars:
          rm: start

      when: rm_status.ims_output[0].type_2_response[0].Status == 'ABENDED'