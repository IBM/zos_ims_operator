---
#
# Copyright 2023 IBM Inc. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
#
# tasks file for initialize
- name: Initialize provisioning
  collections:
    - ibm.ibm_zos_core

  block:
    - block:
        - name: Copy imsjava to target
          copy:
            src: '{{ role_path }}/files/java/imsjava.tar'
            dest: '{{uss_file_path}}/imsjava.tar'

        - name: Unarchive templates on target
          shell: 'tar -Co . -xf imsjava.tar ; rm imsjava.tar'
          args:
            chdir: '{{uss_file_path}}'

        - name: Create dfsjvmpr.props for potential JMP regions
          shell: echo {{ lookup('template', role_path + '/templates/configs/dfsjvmpr.j2') }} > {{ uss_file_path }}/dfsjvmpr.props #{{ JAVA_CONF_PATH }}
      when: DFS_INIT_JAVA_CONF


    - name: Send PROCLIB members
      block:
        - name: Create temporary directory to store PROCLIB members
          tempfile:
            state: directory
          register: proclib_tmp_dir

        - set_fact:
            eager_role_path: '{{role_path}}'

        - name: Send PROCLIB member templates to USS directory
          include_role:
            name: send-templates
          vars:
            template_path: '{{eager_role_path}}/templates/procs/*'
            uss_file_path: '{{ proclib_tmp_dir.path }}'

        - name: Remove extensions from filenames
          shell: >
            for procname in $(ls *.j2); do
            basename="$(echo ${procname} | cut -d'.' -f1)";
            cp ${procname} "//'{{ DFS_AUTH_LIB_HLQ1 }}.{{ DFS_AUTH_LIB_HLQ2 }}.PROCLIB(${basename})'" ;
            done
          args:
            chdir: '{{ proclib_tmp_dir.path }}'
          when: ( not reconcile_run or (reconcile_run and tmdb_cr_instance.resources[0].status.run_result == 'failedInputValidation') )
      always:
        - name: Delete the temporary PROCLIB files directory
          file:
            path: '{{ proclib_tmp_dir.path }}'
            state: absent
      when: send_procs